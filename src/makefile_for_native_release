# this came from https://gist.github.com/maxtruxa/4b3929e118914ccef057f8a05c614b0f

# i've marked places 

# output binary
BIN := juxt_edit

# source files
SRCS := \
    configuration.cpp \
    tinyutf8.cpp \
    Bubbles.cpp \
    GlContext.cpp \
    Windows.cpp \
    main_for_release.cpp \
    App.cpp \
    TextTextureAtlas.cpp 

# files included in the tarball generated by 'make dist' (e.g. add LICENSE file)
DISTFILES := $(BIN)

# filename of the tar archive generated by 'make dist'
DISTOUTPUT := $(BIN).tar.gz

# intermediate directory for generated object files
OBJDIR := .o_native_release
# intermediate directory for generated dependency files
DEPDIR := .d_native_release

# object files, auto generated from source files
OBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(SRCS)))
# dependency files, auto generated from source files
DEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(SRCS)))

# compilers (at least gcc and clang) don't create the subdirectories automatically
$(shell mkdir -p $(dir $(OBJS)) >/dev/null)
$(shell mkdir -p $(dir $(DEPS)) >/dev/null)

EXPORTS_FILE := web_exports.txt

#***

OS := $(shell uname)

ifeq ($(OS),Darwin)
# C compiler
CC := clang
# C++ compiler
CXX := clang++
# linker
LD := clang++
# tar
TAR := tar

CXXFLAGS = -std=c++11 -stdlib=libc++ \
	-Iinclude/ \
	-isystem ~/github/skia/include/core/ \
	-isystem ~/github/skia/include/config/ \
	-isystem ~/github/skia/include/effects/ \
	-isystem ~/github/skia/include/gpu/ \
	-isystem ~/github/skia/include/ports/ \
	~/github/lua-5.3*/src/liblua.a \
	-isystem /usr/local/Cellar/glfw/3.2.1/include/
	# may need to change location of glfw for your system -- i can't get pkg-config to find it
	# using `-isystem foo` instead of `-Ifoo` suppresses warnings


export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/

LDLIBS :=  \
	`pkg-config --static --libs fontconfig`

LINKBITS := \
	~/github/lua-5.3*/src/liblua.a \
	`pkg-config --static --libs glfw3 glew` \
	~/github/skia/out/Static/libskia.a  \
	-framework OpenGL
#\
	`pkg-config --libs glfw3` \
	`pkg-config --libs glew` \
	~/github/lua-5.3*/src/liblua.a 
else

# C compiler
CC := g++
# C++ compiler
CXX := g++
# linker
LD := g++
# tar
TAR := tar

LDLIBS := -L~/github/skia/out/Static/ \
	`pkg-config --static --libs fontconfig`

LINKBITS := \
	`pkg-config --libs glfw3` \
	`pkg-config --libs glew` \
	~/github/lua-5.3*/src/liblua.a \
	~/github/skia/out/Static/libskia.a \
	-ldl

# C flags
CFLAGS := -std=c11
# C++ flags
CXXFLAGS := -std=c++11 -Iinclude/ \
	-I~/github/skia/include/core/ \
	-I~/github/skia/include/config/ \
	-I~/github/skia/include/effects/ \
	-I~/github/skia/include/gpu/ \
	-I~/github/skia/include/ports/

endif




# C/C++ flags
CPPFLAGS := -g -Wall -Wextra -pedantic -Wfatal-errors
#*** -g goes above
# linker flags
LDFLAGS := -lpthread 
# flags required for dependency generation; passed to compilers
DEPFLAGS = -MT $@ -MD -MP -MF $(DEPDIR)/$*.Td

# compile C source files
COMPILE.c = $(CC) $(DEPFLAGS) $(CFLAGS) $(CPPFLAGS) -c -o $@
# compile C++ source files
COMPILE.cc = $(CXX) $(DEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) -c -o $@
# link object files to binary
#LINK.o = $(LD) $(LDFLAGS) $(LDLIBS) -o $@
LINK.o = $(LD) $(LDFLAGS) -o $@ $(LDLIBS)
# precompile step
PRECOMPILE =
# postcompile step
POSTCOMPILE = mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d

all: $(BIN) move open

dist: $(DISTFILES)
	$(TAR) -cvzf $(DISTOUTPUT) $^

MOVETORELEASEDIR = mv juxt_edit ../native_version/

.PHONY: move
move:
	$(MOVETORELEASEDIR)

.PHONY: open
open:
	$(OPENINFIREFOX)

.PHONY: clean
clean:
	$(RM) -r $(OBJDIR) $(DEPDIR)

.PHONY: distclean
distclean: clean
	$(RM) $(BIN) $(DISTOUTPUT)

.PHONY: install
install:
	@echo no install tasks configured

.PHONY: uninstall
uninstall:
	@echo no uninstall tasks configured

.PHONY: check
check:
	@echo no tests configured

.PHONY: help
help:
	@echo available targets: all dist clean distclean install uninstall check

$(BIN): $(OBJS)
	$(LINK.o) -Wall  $^ $(LINKBITS)
#	$(LINK.o) -Wall  $^ -L~/github/skia/out/Static/libskia.a $(LINKBITS)


#	$(LINK.o) -Wall  $^ -lskia $(LINKBITS)
#	$(LINK.o) $^

$(OBJDIR)/%.o: %.c
$(OBJDIR)/%.o: %.c $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.c) $<
	$(POSTCOMPILE)

$(OBJDIR)/%.o: %.cpp
$(OBJDIR)/%.o: %.cpp $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE)

$(OBJDIR)/%.o: %.cc
$(OBJDIR)/%.o: %.cc $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE)

$(OBJDIR)/%.o: %.cxx
$(OBJDIR)/%.o: %.cxx $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE)

.PRECIOUS = $(DEPDIR)/%.d
$(DEPDIR)/%.d: ;

-include $(DEPS)